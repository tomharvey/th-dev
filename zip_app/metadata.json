{
  "name": "zip_app",
  "description": "LWRP to install Mac OS X applications from zip archives",
  "long_description": "# Description\n\nLWRP to install Mac OS X applications from zip archives.\n\n# Requirements\n\n## Chef\n\nTested on 0.10.2 but newer and older version should work just fine. File an\n[issue][issues] if this isn't the case.\n\n## Platform\n\nOnly for `node[:platform] == \"mac_os_x\"` platforms. Tested on Mac OS X 10.7\n(Lion) and 10.6.8 (Snow Leopard).\n\n## Cookbooks\n\nThere are **no** external cookbook dependencies.\n\n# Installation\n\nDepending on the situation and use case there are several ways to install\nthis cookbook. All the methods listed below assume a tagged version release\nis the target, but omit the tags to get the head of development. A valid\nChef repository structure like the [Opscode repo][chef_repo] is also assumed.\n\n## From the Opscode Community Platform\n\nTo install this cookbook from the Opscode platform, use the *knife* command:\n\n    knife cookbook site install zip_app\n\n## Using Librarian\n\nThe [Librarian][librarian] gem aims to be Bundler for your Chef cookbooks.\nInclude a reference to the cookbook in a **Cheffile** and run\n`librarian-chef install`. To install with Librarian:\n\n    gem install librarian\n    cd chef-repo\n    librarian-chef init\n    cat >> Cheffile <<END_OF_CHEFFILE\n    cookbook 'zip_app',\n      :git => 'git://github.com/fnichol/chef-zip_app.git', :ref => 'v0.2.2'\n    END_OF_CHEFFILE\n    librarian-chef install\n\n## Using knife-github-cookbooks\n\nThe [knife-github-cookbooks][kgc] gem is a plugin for *knife* that supports\ninstalling cookbooks directly from a GitHub repository. To install with the\nplugin:\n\n    gem install knife-github-cookbooks\n    cd chef-repo\n    knife cookbook github install fnichol/chef-zip_app/v0.2.2\n\n## As a Git Submodule\n\nA common practice (which is getting dated) is to add cookbooks as Git\nsubmodules. This is accomplishes like so:\n\n    cd chef-repo\n    git submodule add git://github.com/fnichol/chef-zip_app.git cookbooks/zip_app\n    git submodule init && git submodule update\n\n**Note:** the head of development will be linked here, not a tagged release.\n\n## As a Tarball\n\nIf the cookbook needs to downloaded temporarily just to be uploaded to a Chef\nServer or Opscode Hosted Chef, then a tarball installation might fit the bill:\n\n    cd chef-repo/cookbooks\n    curl -Ls https://github.com/fnichol/chef-zip_app/tarball/v0.2.2 | tar xfz - && \\\n      mv fnichol-chef-zip_app-* zip_app\n\n# Usage\n\nSimply include `recipe[zip_app]` in your run_list and the\n`zip_app_package` resource will be available.\n\nTo use `recipe[zip_app::data_bag]`, include it in your run_list and have a\ndata bag called `\"apps\"` with an item called `\"mac_os_x\"` like the following:\n\n    {\n      \"id\"        : \"mac_os_x\",\n      \"zip_apps\"  : [\n        { \"name\"        : \"iTerm\",\n          \"source\"      : \"http://iterm2.googlecode.com/files/iTerm2_v1_0_0.zip\",\n          \"checksum\"    : \"2afad022b1e1f08b3ed40f0c2bde7bf7cce003852c83f85948c7f57a5578d9c5\"\n        },\n        { \"name\"        : \"Divvy\",\n          \"source\"      : \"http://mizage.com/divvy/downloads/Divvy.zip\"\n        }\n      ]\n    }\n\nAlternatively, you can override the data bag and item by setting the\n`node['zip_app']['data_bag']` attribute to some like:\n\n    node['zip_app']['data_bag'] = ['apps', \"workstation-mac\"]\n\n# Recipes\n\n## default\n\nProcesses a list of *zip_apps* (which is emtpy by default) to be installed.\n\nUse this recipe when you have a list of apps in `node['zip_app']['apps']` or\nwhen all you need is the `zip_app_package` LWRP.\n\n## data_bag\n\nFetches an list of *zip_apps* from a data bag item and appends it to the\n`node['zip_app']['apps']` attribute for processing. This recipe then includes\nthe default recipe, so there is no need to explicitly include `recipe[zip_app]`.\n\nUse this recipe when you want data bag driven data in your workflow.\n\n# Attributes\n\n## `apps`\n\nAn array of zip_app hashes. The keys in the hashes correspond to the attributes\npassed to the `zip_app_package` LWRP. For example:\n\n    node['zip_app']['apps'] = [\n      { 'name'      => 'iTerm',\n        'source'    => 'http://iterm2.googlecode.com/files/iTerm2_v1_0_0.zip',\n        'checksum'  => '2afad022b1e1f08b3ed40f0c2bde7bf7cce003852c83f85948c7f57a5578d9c5'\n      },\n      { 'name'      => 'GitHub',\n        'source'    => 'https://github-central.s3.amazonaws.com/mac/GitHub%20for%20Mac%201.0.6.zip',\n        'checksum'  => '1e95b3c16915efe171e53c2de31ae5b0b45cca6689a6923baa96cf754a06ed73'\n      }\n    ]\n\nThe default is an empty Array: `[]`.\n\n## `data_bag`\n\nThe data bag and item containing a list of apps to be installed.. This is used\nby the `data_bag` recipe. The default is `['apps', node['platform']]`.\n\n# Resources and Providers\n\n## zip_app_package\n\n### Actions\n\nAction    |Description                   |Default\n----------|------------------------------|-------\ninstall   |Download and extract the `*.app` application into the destination directory. |Yes\n### Attributes\n\nAttribute   |Description |Default value\n------------|------------|-------------\napp         |**Name attribute:** The name of the installed application. For example, if the application to be installed was \"/Application/GitHub.app\" then the value would be `\"GitHub\"`. |`nil`\nsource      |The source URL of the zip archive. |`nil`\nchecksum    |(optional) The SHA-256 checksum of the file. If the local file matches the checksum, Chef will not download it. |`nil`\ndestination |The base path to where the application will be installed. |`\"/Applications\"`\nzip_file    |(optional) The zip file name if it differs from the the last path fragment in the `source` URL. |`nil`\ninstalled   |(internal) |`false`\n\n### Examples\n\n#### Install Basic App\n\n    zip_app_package \"Divvy\" do\n      source  \"http://mizage.com/divvy/downloads/Divvy.zip\"\n    end\n\n**Note:** the install action is default.\n\n#### Install App To Custom Destination\n\n    zip_app_package \"GitHub\" do\n      source      \"https://github-central.s3.amazonaws.com/mac/GitHub%20for%20Mac%201.0.6.zip\"\n      checksum    \"1e95b3c16915efe171e53c2de31ae5b0b45cca6689a6923baa96cf754a06ed73\"\n      destination \"#{ENV['HOME']}/Applications\"\n    end\n\n**Note:** *GitHub.app* will be installed to `~/Applications/GitHub.app`,\nand assumes that the directory exists.\n\n# Credits\n\nThis cookbook and LWRP patterns are heavily lifted with love from the\n[dmg][dmg_cb], [iterm2][iterm2_cb], [1password][1password_cb], and\n[ghmac][ghmac_cb] cookbooks. Oh, and Joshua Timberman's\n[workstation][workstation] blog post.\n\n# Development\n\n* Source hosted at [GitHub][repo]\n* Report issues/Questions/Feature requests on [GitHub Issues][issues]\n\nPull requests are very welcome! Make sure your patches are well tested.\nIdeally create a topic branch for every separate change you make.\n\n# License and Author\n\nAuthor:: Fletcher Nichol (<fnichol@nichol.ca>)\n\nCopyright 2011, Fletcher Nichol\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n[1password_cb]: http://community.opscode.com/cookbooks/1password\n[dmg_cb]:       http://community.opscode.com/cookbooks/dmg\n[chef_repo]:    https://github.com/opscode/chef-repo\n[ghmac_cb]:     http://community.opscode.com/cookbooks/ghmac\n[iterm2_cb]:    http://community.opscode.com/cookbooks/iterm2\n[kgc]:          https://github.com/websterclay/knife-github-cookbooks#readme\n[librarian]:    https://github.com/applicationsonline/librarian#readme\n[workstation]:  http://jtimberman.posterous.com/managing-my-workstations-with-chef\n\n[repo]:         https://github.com/fnichol/chef-zip_app\n[issues]:       https://github.com/fnichol/chef-zip_app/issues\n",
  "maintainer": "Fletcher Nichol",
  "maintainer_email": "fnichol@nichol.ca",
  "license": "Apache 2.0",
  "platforms": {
    "mac_os_x": ">= 0.0.0"
  },
  "dependencies": {

  },
  "recommendations": {

  },
  "suggestions": {

  },
  "conflicting": {

  },
  "providing": {

  },
  "replacing": {

  },
  "attributes": {

  },
  "groupings": {

  },
  "recipes": {
    "zip_app": "Processes a list of *zip_apps* (which is emtpy by default) to be installed.",
    "zip_app::data_bag": "Fetches an list of *zip_apps* from a data bag item and sets the `node['zip_app']['apps']` attribute for processing."
  },
  "version": "0.2.4",
  "source_url": "",
  "issues_url": ""
}
